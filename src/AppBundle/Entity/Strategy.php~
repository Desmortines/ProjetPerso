<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Strategy
 *
 * @ORM\Table(name="strategy")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\StrategyRepository")
 */
class Strategy
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var Season
     *
     * @ORM\ManyToMany(targetEntity="AppBundle\Entity\Season", inversedBy="Strategy")
     */
    private $season;

    /**
     * @var name
     *
     * @ORM\Column(name="name", type="string", length=255, unique=true)
     */
    private $name;

    /**
     * @var isgimmick
     *
     * @ORM\Column(name="isgimmick", type="boolean")
     */
    private $isgimmick;

    /**
     * @var Strategy_Content
     *
     * @ORM\OneToOne(targetEntity="AppBundle\Entity\Strategy_Content", mappedBy="strategy")
     */
    private $strategycontent;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->season = new \Doctrine\Common\Collections\ArrayCollection();
    }


    /**
     * Set name
     *
     * @param string $name
     *
     * @return Strategy
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set isgimmick
     *
     * @param boolean $isgimmick
     *
     * @return Strategy
     */
    public function setIsgimmick($isgimmick)
    {
        $this->isgimmick = $isgimmick;

        return $this;
    }

    /**
     * Get isgimmick
     *
     * @return boolean
     */
    public function getIsgimmick()
    {
        return $this->isgimmick;
    }

    /**
     * Add season
     *
     * @param \AppBundle\Entity\Season $season
     *
     * @return Strategy
     */
    public function addSeason(\AppBundle\Entity\Season $season)
    {
        $this->season[] = $season;

        return $this;
    }

    /**
     * Remove season
     *
     * @param \AppBundle\Entity\Season $season
     */
    public function removeSeason(\AppBundle\Entity\Season $season)
    {
        $this->season->removeElement($season);
    }

    /**
     * Get season
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSeason()
    {
        return $this->season;
    }

    /**
     * Set strategycontent
     *
     * @param \AppBundle\Entity\Strategy_Content $strategycontent
     *
     * @return Strategy
     */
    public function setStrategycontent(\AppBundle\Entity\Strategy_Content $strategycontent = null)
    {
        $this->strategycontent = $strategycontent;

        return $this;
    }

    /**
     * Get strategycontent
     *
     * @return \AppBundle\Entity\Strategy_Content
     */
    public function getStrategycontent()
    {
        return $this->strategycontent;
    }
}
