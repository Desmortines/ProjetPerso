# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'


    # ...
    app.admin.strategy:
        class: AppBundle\Admin\StrategyAdmin
        arguments: [~, AppBundle\Entity\Strategy, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Strategy }
        public: true

    app.admin.strategy.content:
        class: AppBundle\Admin\Strategy_ContentAdmin
        arguments: [~, AppBundle\Entity\Strategy_Content, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Strategy_Content }
        public: true

    app.admin.champ:
        class: AppBundle\Admin\ChampAdmin
        arguments: [~, AppBundle\Entity\Champ, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Champ }
        public: true

    app.admin.comment:
        class: AppBundle\Admin\CommentAdmin
        arguments: [~, AppBundle\Entity\Comment, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Comment }
        public: true

    app.admin.exemple:
        class: AppBundle\Admin\ExempleAdmin
        arguments: [~, AppBundle\Entity\Exemple, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Exemple }
        public: true

    app.admin.season:
        class: AppBundle\Admin\SeasonAdmin
        arguments: [~, AppBundle\Entity\Season, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Season }
        public: true

    app.admin.team:
        class: AppBundle\Admin\TeamAdmin
        arguments: [~, AppBundle\Entity\Team, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: Team }
        public: true

    app.admin.user:
        class: AppBundle\Admin\UserAdmin
        arguments: [~, AppBundle\Entity\User, Sonata\AdminBundle\Controller\CRUDController]
        tags:
        - { name: sonata.admin, manager_type: orm, group: admin, label: User }
        public: true
